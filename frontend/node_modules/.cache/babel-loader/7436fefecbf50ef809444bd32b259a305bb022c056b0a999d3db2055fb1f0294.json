{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juan_\\\\OneDrive\\\\Escritorio\\\\loginproject\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\n//cd frontend-- > npm start;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [datos, setDatos] = useState(\"\");\n  const [datos2, setDatos2] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = () => {\n    // Aquí podrías implementar la lógica para enviar los datos de inicio de sesión a tu backend\n    console.log(\"Nombre de usuario:\", username);\n    console.log(\"Contraseña:\", password);\n    // Luego podrías manejar la respuesta del servidor y actualizar los datos en consecuencia\n  };\n  useEffect(() => {\n    // Función para realizar la solicitud Fetch\n    const fetchData = async () => {\n      try {\n        let response = await fetch(\"http://localhost:8080/hola\"); // URL de la solicitud\n        if (!response.ok) {\n          throw new Error(\"Error al cargar datos\");\n        }\n        const data = await response.text(); // Obtener la respuesta como texto\n        console.log(\"data response\", data);\n        console.log(data); // Hacer algo con los datos recibidos\n        setDatos(data);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    const fetchData2 = async () => {\n      try {\n        let response = await fetch(\"http://localhost:8080/holarda\");\n        if (!response.ok) {\n          throw new Error(\"Error al cargar datos\");\n        }\n        const data = await response.text();\n        console.log(\"data response\", data);\n        console.log(data);\n        setDatos2(data);\n      } catch (error) {\n        console.log(\"Error:\", error);\n      }\n    };\n\n    // Llamar a la función fetchData cuando el componente se monta\n    fetchData();\n    fetchData2();\n    return () => {};\n  }, []); // El segundo argumento [] significa que este efecto se ejecuta solo una vez al montar el componente\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Iniciar sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Nombre de usuario:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Contrase\\xF1a:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Iniciar sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"X+mMo1HUx9q/EvsSCHKHcLQVS9Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useEffect","useState","jsxDEV","_jsxDEV","App","_s","datos","setDatos","datos2","setDatos2","username","setUsername","password","setPassword","handleLogin","console","log","fetchData","response","fetch","ok","Error","data","text","error","fetchData2","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/juan_/OneDrive/Escritorio/loginproject/frontend/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\n//cd frontend-- > npm start;\nfunction App() {\n  const [datos, setDatos] = useState(\"\");\n  const [datos2, setDatos2] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = () => {\n    // Aquí podrías implementar la lógica para enviar los datos de inicio de sesión a tu backend\n    console.log(\"Nombre de usuario:\", username);\n    console.log(\"Contraseña:\", password);\n    // Luego podrías manejar la respuesta del servidor y actualizar los datos en consecuencia\n  };\n\n  useEffect(() => {\n    // Función para realizar la solicitud Fetch\n    const fetchData = async () => {\n      try {\n        let response = await fetch(\"http://localhost:8080/hola\"); // URL de la solicitud\n        if (!response.ok) {\n          throw new Error(\"Error al cargar datos\");\n        }\n\n        const data = await response.text(); // Obtener la respuesta como texto\n        console.log(\"data response\", data);\n        console.log(data); // Hacer algo con los datos recibidos\n        setDatos(data);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    const fetchData2 = async () => {\n      try {\n        let response = await fetch(\"http://localhost:8080/holarda\");\n        if (!response.ok) {\n          throw new Error(\"Error al cargar datos\");\n        }\n        const data = await response.text();\n        console.log(\"data response\", data);\n        console.log(data);\n        setDatos2(data);\n      } catch (error) {\n        console.log(\"Error:\", error);\n      }\n    };\n\n    // Llamar a la función fetchData cuando el componente se monta\n    fetchData();\n    fetchData2();\n\n    return () => {};\n  }, []); // El segundo argumento [] significa que este efecto se ejecuta solo una vez al montar el componente\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        {/* <div>\n          <h1>Datos del primer endpoint:</h1>\n          <p>{datos}</p>\n          <h1>Datos del segundo endpoint:</h1>\n          <p>{datos2}</p>\n        </div> */}\n        <div>\n          <h2>Iniciar sesión</h2>\n          <form onSubmit={handleLogin}>\n            <label>\n              Nombre de usuario:\n              <input\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Contraseña:\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </label>\n            <br />\n            <button type=\"submit\">Iniciar sesión</button>\n          </form>\n        </div>\n      </header>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEN,QAAQ,CAAC;IAC3CK,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,QAAQ,CAAC;IACpC;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC,CAAC,CAAC;QAC1D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;QACpCR,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEM,IAAI,CAAC;QAClCP,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC,CAAC,CAAC;QACnBf,QAAQ,CAACe,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IACD,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,IAAIP,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;QAC3D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCR,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEM,IAAI,CAAC;QAClCP,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;QACjBb,SAAS,CAACa,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdT,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEQ,KAAK,CAAC;MAC9B;IACF,CAAC;;IAED;IACAP,SAAS,CAAC,CAAC;IACXQ,UAAU,CAAC,CAAC;IAEZ,OAAO,MAAM,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBxB,OAAA;MAAQuB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BxB,OAAA;QAAKyB,GAAG,EAAE7B,IAAK;QAAC2B,SAAS,EAAC,UAAU;QAACG,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAOlD9B,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UAAAwB,QAAA,EAAI;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvB9B,OAAA;UAAM+B,QAAQ,EAAEpB,WAAY;UAAAa,QAAA,gBAC1BxB,OAAA;YAAAwB,QAAA,GAAO,oBAEL,eAAAxB,OAAA;cACEgC,IAAI,EAAC,MAAM;cACXC,KAAK,EAAE1B,QAAS;cAChB2B,QAAQ,EAAGC,CAAC,IAAK3B,WAAW,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC,eACR9B,OAAA;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACN9B,OAAA;YAAAwB,QAAA,GAAO,gBAEL,eAAAxB,OAAA;cACEgC,IAAI,EAAC,UAAU;cACfC,KAAK,EAAExB,QAAS;cAChByB,QAAQ,EAAGC,CAAC,IAAKzB,WAAW,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC,eACR9B,OAAA;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACN9B,OAAA;YAAQgC,IAAI,EAAC,QAAQ;YAAAR,QAAA,EAAC;UAAc;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC5B,EAAA,CAxFQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAyFZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}